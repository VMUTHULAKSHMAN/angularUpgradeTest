{
  "name": "@fuse/starter",
  "version": "14.2.0",
  "private": true,
  "description": "Fuse - Angular Admin Template and Starter Project",
  "license": "https://themeforest.net/licenses/standard",
  "author": "https://themeforest.net/user/srcn",
  "scripts": {
    "app:start": "./mvnw",
    "backend:build-cache": "./mvnw dependency:go-offline",
    "backend:debug": "./mvnw -Dspring-boot.run.jvmArguments=\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000\"",
    "backend:doc:test": "./mvnw -ntp javadoc:javadoc --batch-mode",
    "backend:info": "./mvnw -ntp enforcer:display-info --batch-mode",
    "backend:nohttp:test": "./mvnw -ntp checkstyle:check --batch-mode",
    "backend:start": "./mvnw -Dskip.installnodenpm -Dskip.npm",
    "backend:unit:test": "./mvnw -ntp -Dskip.installnodenpm -Dskip.npm verify --batch-mode -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.mycompany.myapp=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "build": "ng build",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test -- -P$npm_package_config_default_environment",
    "ci:e2e:build": "npm run build -- --configuration development",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "npm run docker:db:up && npm run docker:others:up && docker ps -a",
    "ci:e2e:run": "npm run clean:all && ",
    "preci:e2e:server:start": "npm run docker:db:await --if-present && npm run docker:others:await --if-present",
    "ci:e2e:server:start": "java -jar target/e2e.$npm_package_config_packaging --spring.profiles.active=e2e,$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.mycompany.myapp=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker",
    "ci:e2e:teardown:docker": "npm run docker:db:down --if-present && npm run docker:others:down && docker ps -a",
    "ci:frontend:build": "npm run webapp:build:$npm_package_config_default_environment",
    "ci:frontend:test": "npm run clean:all && npm run doc:gen --if-present && npm run ci:frontend:build && npm test",
    "clean:all": "rimraf target/",
    "clean:build": "rimraf target/classes/static/",
    "clean:unittest:cache": "rimraf target/classes/jest-cache/",
    "clean:unittest:coverage": "rimraf target/classes/jest-results/",
    "doc:gen": "rimraf documentation/ && compodoc -p tsconfig.doc.json",
    "doc:serve": "rimraf documentation/ && compodoc -p tsconfig.doc.json -s -r 18080",
    "docker:app:up": "docker-compose -f src/main/docker/app.yml up -d",
    "docker:db:down": "docker-compose -f src/main/docker/postgresql.yml down -v",
    "docker:db:up": "docker-compose -f src/main/docker/postgresql.yml up -d",
    "docker:dev:down": "docker-compose -f docker/app.yml down",
    "docker:dev:mock:e2e": "npm run webapp:build:dev && concurrently -k -s first \"docker-compose -f docker/app.yml up\" \"wait-on -t 120000 http-get://localhost:8080 && npm run e2e:cypress -- -c baseUrl=http://localhost:8080\"",
    "docker:dev:up": "docker-compose -f docker/app.yml up",
    "docker:image:build": "npm run clean:all && npm run:webapp:build:prod",
    "docker:jhipster-registry:await": "echo \"Waiting for jhipster-registry to start\" && wait-on -t 180000 http-get://localhost:8761/management/health && echo \"jhipster-registry started\"",
    "docker:jhipster-registry:down": "docker-compose -f src/main/docker/jhipster-registry.yml down -v",
    "docker:jhipster-registry:up": "docker-compose -f src/main/docker/jhipster-registry.yml up -d",
    "docker:others:await": "npm run docker:jhipster-registry:await",
    "docker:others:down": "npm run docker:jhipster-registry:down",
    "predocker:others:up": "",
    "docker:others:up": "npm run docker:jhipster-registry:up",
    "e2e:cypress": "cypress run --browser chrome --record ${CYPRESS_ENABLE_RECORD:-false}",
    "e2e:mock": "concurrently -k -s first \"npm start\" \"wait-on -t 60000 http-get://localhost:4200 && npm run e2e:cypress\"",
    "e2e:mock:dev": "cypress run --browser chrome --record --headed ${CYPRESS_ENABLE_RECORD:-false}",
    "java:docker": "./mvnw -ntp verify -DskipTests -Pprod jib:dockerBuild",
    "java:docker:arm64": "npm run java:docker -- -Djib-maven-plugin.architecture=arm64",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "java:jar": "./mvnw -ntp verify -DskipTests --batch-mode",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war": "./mvnw -ntp verify -DskipTests --batch-mode -Pwar",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "jest": "jest --coverage --logHeapUsage --maxWorkers=2 --config jest.conf.js",
    "lint": "ng lint",
    "ng": "ng",
    "start": "ng serve",
    "test": "ng test --coverage --log-heap-usage -w=2",
    "test:watch": "ng test --watch --coverage --log-heap-usage -w=2",
    "watch": "ng build --watch --configuration development",
    "webapp:build": "npm run clean-www && npm run webapp:build:dev",
    "webapp:build:dev": "ng build --configuration development",
    "webapp:build:prod": "ng build --configuration production"
  },
  "config": {
    "backend_port": "8080",
    "default_environment": "prod",
    "packaging": "jar"
  },
  "dependencies": {
    "@angular/animations": "14.2.6",
    "@angular/cdk": "14.2.5",
    "@angular/common": "14.2.6",
    "@angular/compiler": "14.2.6",
    "@angular/core": "14.2.6",
    "@angular/forms": "14.2.6",
    "@angular/localize": "14.2.6",
    "@angular/material": "14.2.5",
    "@angular/material-moment-adapter": "14.2.5",
    "@angular/platform-browser": "14.2.6",
    "@angular/platform-browser-dynamic": "14.2.6",
    "@angular/router": "14.2.6",
    "@fortawesome/angular-fontawesome": "0.10.2",
    "@fortawesome/fontawesome-svg-core": "6.1.1",
    "@fortawesome/free-solid-svg-icons": "6.1.1",
    "@ng-bootstrap/ng-bootstrap": "12.0.2",
    "@ngneat/transloco": "3.1.4",
    "@ngx-translate/core": "^14.0.0",
    "@ngx-translate/http-loader": "^7.0.0",
    "@popperjs/core": "2.11.5",
    "apexcharts": "3.33.1",
    "crypto-js": "3.3.0",
    "highlight.js": "11.4.0",
    "lodash-es": "4.17.21",
    "moment": "2.29.1",
    "ng-apexcharts": "1.7.0",
    "ng2-pdf-viewer": "^9.0.0",
    "ngx-infinite-scroll": "13.0.1",
    "ngx-markdown": "13.1.0",
    "ngx-quill": "16.1.2",
    "ngx-translate": "0.0.1-security",
    "ngx-webstorage": "^9.0.0",
    "perfect-scrollbar": "1.5.3",
    "quill": "1.3.7",
    "rxjs": "7.5.4",
    "tslib": "2.3.1",
    "zone.js": "0.11.4"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "^13.1.0",
    "@angular-builders/jest": "13.0.3",
    "@angular-devkit/build-angular": "14.2.6",
    "@angular-eslint/builder": "14.1.2",
    "@angular-eslint/eslint-plugin": "14.1.2",
    "@angular-eslint/eslint-plugin-template": "14.1.2",
    "@angular-eslint/schematics": "14.1.2",
    "@angular-eslint/template-parser": "14.1.2",
    "@angular/cli": "14.2.6",
    "@angular/compiler-cli": "14.2.6",
    "@angular/service-worker": "14.2.6",
    "@compodoc/compodoc": "^1.1.19",
    "@cypress/code-coverage": "3.10.0",
    "@tailwindcss/aspect-ratio": "0.4.0",
    "@tailwindcss/line-clamp": "0.3.1",
    "@tailwindcss/typography": "0.5.2",
    "@types/chroma-js": "2.1.3",
    "@types/crypto-js": "3.1.47",
    "@types/highlight.js": "10.1.0",
    "@types/jest": "27.4.1",
    "@types/lodash": "4.14.178",
    "@types/lodash-es": "4.17.6",
    "@types/node": "12.20.46",
    "@typescript-eslint/eslint-plugin": "^5.36.2",
    "@typescript-eslint/parser": "^5.36.2",
    "autoprefixer": "10.4.2",
    "chroma-js": "2.4.2",
    "concurrently": "7.2.2",
    "cypress": "9.7.0",
    "cypress-audit": "1.1.0",
    "eslint": "^8.23.0",
    "eslint-plugin-cypress": "2.12.1",
    "eslint-plugin-import": "2.25.4",
    "eslint-plugin-jsdoc": "37.9.4",
    "eslint-plugin-prefer-arrow": "1.2.3",
    "folder-hash": "4.0.2",
    "jest": "27.5.1",
    "jest-date-mock": "1.0.8",
    "jest-junit": "13.1.0",
    "jest-preset-angular": "11.1.1",
    "jest-sonar-reporter": "2.0.0",
    "lodash": "4.17.21",
    "merge-jsons-webpack-plugin": "2.0.1",
    "postcss": "8.4.6",
    "tailwindcss": "3.0.23",
    "ts-jest": "27.1.4",
    "typescript": "4.8.4",
    "wait-on": "6.0.1",
    "webpack-merge": "5.8.0",
    "webpack-notifier": "1.15.0"
  },
  "engines": {
    "node": ">=16.15.0",
    "npm": ">=6.14.17"
  },
  "jestSonar": {
    "reportPath": "target/test-results/jest",
    "reportFile": "TESTS-results-sonar.xml"
  }
}
